{"Classes/ObjcLDStringChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDStringChangedFlag(py)oldValue":{"name":"oldValue","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDStringChangedFlag"},"Classes/ObjcLDStringChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDStringChangedFlag(py)newValue":{"name":"newValue","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDStringChangedFlag"},"Classes/ObjcLDStringChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDStringChangedFlag(py)oldValueSource":{"name":"oldValueSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDStringChangedFlag"},"Classes/ObjcLDStringChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDStringChangedFlag(py)newValueSource":{"name":"newValueSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDStringChangedFlag"},"Classes/ObjcLDIntegerChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDIntegerChangedFlag(py)oldValue":{"name":"oldValue","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDIntegerChangedFlag"},"Classes/ObjcLDIntegerChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDIntegerChangedFlag(py)newValue":{"name":"newValue","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDIntegerChangedFlag"},"Classes/ObjcLDIntegerChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDIntegerChangedFlag(py)oldValueSource":{"name":"oldValueSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDIntegerChangedFlag"},"Classes/ObjcLDIntegerChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDIntegerChangedFlag(py)newValueSource":{"name":"newValueSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDIntegerChangedFlag"},"Classes/ObjcLDDoubleChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDDoubleChangedFlag(py)oldValue":{"name":"oldValue","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDDoubleChangedFlag"},"Classes/ObjcLDDoubleChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDDoubleChangedFlag(py)newValue":{"name":"newValue","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDDoubleChangedFlag"},"Classes/ObjcLDDoubleChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDDoubleChangedFlag(py)oldValueSource":{"name":"oldValueSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDDoubleChangedFlag"},"Classes/ObjcLDDoubleChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDDoubleChangedFlag(py)newValueSource":{"name":"newValueSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDDoubleChangedFlag"},"Classes/ObjcLDDictionaryChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDDictionaryChangedFlag(py)oldValue":{"name":"oldValue","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDDictionaryChangedFlag"},"Classes/ObjcLDDictionaryChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDDictionaryChangedFlag(py)newValue":{"name":"newValue","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDDictionaryChangedFlag"},"Classes/ObjcLDDictionaryChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDDictionaryChangedFlag(py)oldValueSource":{"name":"oldValueSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDDictionaryChangedFlag"},"Classes/ObjcLDDictionaryChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDDictionaryChangedFlag(py)newValueSource":{"name":"newValueSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDDictionaryChangedFlag"},"Classes/ObjcLDBoolChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDBoolChangedFlag(py)oldValue":{"name":"oldValue","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDBoolChangedFlag"},"Classes/ObjcLDBoolChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDBoolChangedFlag(py)newValue":{"name":"newValue","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDBoolChangedFlag"},"Classes/ObjcLDBoolChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDBoolChangedFlag(py)oldValueSource":{"name":"oldValueSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDBoolChangedFlag"},"Classes/ObjcLDBoolChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDBoolChangedFlag(py)newValueSource":{"name":"newValueSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDBoolChangedFlag"},"Classes/ObjcLDArrayChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDArrayChangedFlag(py)oldValue":{"name":"oldValue","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDArrayChangedFlag"},"Classes/ObjcLDArrayChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDArrayChangedFlag(py)newValue":{"name":"newValue","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDArrayChangedFlag"},"Classes/ObjcLDArrayChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDArrayChangedFlag(py)oldValueSource":{"name":"oldValueSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDArrayChangedFlag"},"Classes/ObjcLDArrayChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDArrayChangedFlag(py)newValueSource":{"name":"newValueSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDArrayChangedFlag"},"Classes/ObjcLDChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDChangedFlag(cpy)nilSource":{"name":"nilSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDChangedFlag"},"Classes/ObjcLDChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDChangedFlag(cpy)typeMismatch":{"name":"typeMismatch","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDChangedFlag"},"Classes/ObjcLDChangedFlag.html#/c:@M@LaunchDarkly@objc(cs)LDChangedFlag(py)key":{"name":"key","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDChangedFlag"},"Classes/ObjcLDChangedFlag.html":{"name":"ObjcLDChangedFlag","abstract":"<p>Undocumented</p>"},"Classes/ObjcLDArrayChangedFlag.html":{"name":"ObjcLDArrayChangedFlag","abstract":"<p>Wraps the changed array values of a flag-key. If the flag is not actually an Array, old &amp; new value default to nil and old &amp; new valueSource returns &lsquo;type mismatch&rsquo;</p>"},"Classes/ObjcLDBoolChangedFlag.html":{"name":"ObjcLDBoolChangedFlag","abstract":"<p>Wraps the changed bool values of a flag-key. If the flag is not actually a Bool, old &amp; new value default to false and old &amp; new valueSource returns &lsquo;type mismatch&rsquo;</p>"},"Classes/ObjcLDDictionaryChangedFlag.html":{"name":"ObjcLDDictionaryChangedFlag","abstract":"<p>Wraps the changed dictionary values of a flag-key. If the flag is not actually a Dictionary, old &amp; new value default to nil and old &amp; new valueSource returns &lsquo;type mismatch&rsquo;</p>"},"Classes/ObjcLDDoubleChangedFlag.html":{"name":"ObjcLDDoubleChangedFlag","abstract":"<p>Wraps the changed double values of a flag-key. If the flag is not actually a Double, old &amp; new value default to 0.0 and old &amp; new valueSource returns &lsquo;type mismatch&rsquo;</p>"},"Classes/ObjcLDIntegerChangedFlag.html":{"name":"ObjcLDIntegerChangedFlag","abstract":"<p>Wraps the changed integer values of a flag-key. If the flag is not actually an Int, old &amp; new value default to 0 and old &amp; new valueSource returns &lsquo;type mismatch&rsquo;</p>"},"Classes/ObjcLDStringChangedFlag.html":{"name":"ObjcLDStringChangedFlag","abstract":"<p>Wraps the changed string values of a flag-key. If the flag is not actually a String, old &amp; new value default to nil and old &amp; new valueSource returns &lsquo;type mismatch&rsquo;</p>"},"Classes/ObjcLDStringVariationValue.html#/c:@M@LaunchDarkly@objc(cs)LDStringVariationValue(py)value":{"name":"value","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDStringVariationValue"},"Classes/ObjcLDStringVariationValue.html#/c:@M@LaunchDarkly@objc(cs)LDStringVariationValue(py)source":{"name":"source","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDStringVariationValue"},"Classes/ObjcLDIntegerVariationValue.html#/c:@M@LaunchDarkly@objc(cs)LDIntegerVariationValue(py)value":{"name":"value","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDIntegerVariationValue"},"Classes/ObjcLDIntegerVariationValue.html#/c:@M@LaunchDarkly@objc(cs)LDIntegerVariationValue(py)source":{"name":"source","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDIntegerVariationValue"},"Classes/ObjcLDDoubleVariationValue.html#/c:@M@LaunchDarkly@objc(cs)LDDoubleVariationValue(py)value":{"name":"value","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDDoubleVariationValue"},"Classes/ObjcLDDoubleVariationValue.html#/c:@M@LaunchDarkly@objc(cs)LDDoubleVariationValue(py)source":{"name":"source","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDDoubleVariationValue"},"Classes/ObjcLDDictionaryVariationValue.html#/c:@M@LaunchDarkly@objc(cs)LDDictionaryVariationValue(py)value":{"name":"value","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDDictionaryVariationValue"},"Classes/ObjcLDDictionaryVariationValue.html#/c:@M@LaunchDarkly@objc(cs)LDDictionaryVariationValue(py)source":{"name":"source","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDDictionaryVariationValue"},"Classes/ObjcLDBoolVariationValue.html#/c:@M@LaunchDarkly@objc(cs)LDBoolVariationValue(py)value":{"name":"value","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDBoolVariationValue"},"Classes/ObjcLDBoolVariationValue.html#/c:@M@LaunchDarkly@objc(cs)LDBoolVariationValue(py)source":{"name":"source","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDBoolVariationValue"},"Classes/ObjcLDArrayVariationValue.html#/c:@M@LaunchDarkly@objc(cs)LDArrayVariationValue(py)value":{"name":"value","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDArrayVariationValue"},"Classes/ObjcLDArrayVariationValue.html#/c:@M@LaunchDarkly@objc(cs)LDArrayVariationValue(py)source":{"name":"source","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDArrayVariationValue"},"Classes/ObjcLDArrayVariationValue.html":{"name":"ObjcLDArrayVariationValue","abstract":"<p>Undocumented</p>"},"Classes/ObjcLDBoolVariationValue.html":{"name":"ObjcLDBoolVariationValue","abstract":"<p>Undocumented</p>"},"Classes/ObjcLDDictionaryVariationValue.html":{"name":"ObjcLDDictionaryVariationValue","abstract":"<p>Undocumented</p>"},"Classes/ObjcLDDoubleVariationValue.html":{"name":"ObjcLDDoubleVariationValue","abstract":"<p>Undocumented</p>"},"Classes/ObjcLDIntegerVariationValue.html":{"name":"ObjcLDIntegerVariationValue","abstract":"<p>Undocumented</p>"},"Classes/ObjcLDStringVariationValue.html":{"name":"ObjcLDStringVariationValue","abstract":"<p>Undocumented</p>"},"Extensions/NSString.html#/c:@CM@LaunchDarkly@@objc(cs)NSString(cm)stringWithFlagValueSource:":{"name":"stringWithFlagValueSource(_:)","abstract":"<p>Undocumented</p>","parent_name":"NSString"},"Enums/ObjcLDFlagValueSource.html#/c:@M@LaunchDarkly@E@LDFlagValueSource@LDFlagValueSourceNilSource":{"name":"nilSource","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDFlagValueSource"},"Enums/ObjcLDFlagValueSource.html#/c:@M@LaunchDarkly@E@LDFlagValueSource@LDFlagValueSourceServer":{"name":"server","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDFlagValueSource"},"Enums/ObjcLDFlagValueSource.html#/c:@M@LaunchDarkly@E@LDFlagValueSource@LDFlagValueSourceCache":{"name":"cache","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDFlagValueSource"},"Enums/ObjcLDFlagValueSource.html#/c:@M@LaunchDarkly@E@LDFlagValueSource@LDFlagValueSourceFallback":{"name":"fallback","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDFlagValueSource"},"Enums/ObjcLDFlagValueSource.html#/c:@M@LaunchDarkly@E@LDFlagValueSource@LDFlagValueSourceTypeMismatch":{"name":"typeMismatch","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDFlagValueSource"},"Classes/ObjcLDFlagValue.html#/c:@M@LaunchDarkly@objc(cs)LDFlagValue(py)flagValueType":{"name":"flagValueType","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDFlagValue"},"Classes/ObjcLDFlagValue.html":{"name":"ObjcLDFlagValue","abstract":"<p>Undocumented</p>"},"Enums/ObjcLDFlagValueSource.html":{"name":"ObjcLDFlagValueSource","abstract":"<p>Undocumented</p>"},"Extensions/NSString.html":{"name":"NSString"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(cpy)privatizableAttributes":{"name":"privatizableAttributes","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(cpy)attributeName":{"name":"attributeName","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(cpy)attributeFirstName":{"name":"attributeFirstName","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(cpy)attributeLastName":{"name":"attributeLastName","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(cpy)attributeCountry":{"name":"attributeCountry","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(cpy)attributeIPAddress":{"name":"attributeIPAddress","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(cpy)attributeEmail":{"name":"attributeEmail","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(cpy)attributeAvatar":{"name":"attributeAvatar","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(cpy)attributeCustom":{"name":"attributeCustom","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(py)key":{"name":"key","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(py)name":{"name":"name","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(py)firstName":{"name":"firstName","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(py)lastName":{"name":"lastName","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(py)country":{"name":"country","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(py)ipAddress":{"name":"ipAddress","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(py)email":{"name":"email","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(py)avatar":{"name":"avatar","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(py)custom":{"name":"custom","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(py)isAnonymous":{"name":"isAnonymous","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(py)device":{"name":"device","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(py)operatingSystem":{"name":"operatingSystem","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(py)privateAttributes":{"name":"privateAttributes","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(im)init":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(im)initWithKey:":{"name":"init(key:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDUser.html#/c:@M@LaunchDarkly@objc(cs)LDUser(im)isEqualWithObject:":{"name":"isEqual(object:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDUser"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)baseUrl":{"name":"baseUrl","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)eventsUrl":{"name":"eventsUrl","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)streamUrl":{"name":"streamUrl","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)eventCapacity":{"name":"eventCapacity","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)connectionTimeoutMillis":{"name":"connectionTimeoutMillis","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)eventFlushIntervalMillis":{"name":"eventFlushIntervalMillis","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)pollIntervalMillis":{"name":"pollIntervalMillis","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)backgroundPollIntervalMillis":{"name":"backgroundPollIntervalMillis","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)minBackgroundPollIntervalMillis":{"name":"minBackgroundPollIntervalMillis","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)minPollingIntervalMillis":{"name":"minPollingIntervalMillis","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)streamingMode":{"name":"streamingMode","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)enableBackgroundUpdates":{"name":"enableBackgroundUpdates","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)startOnline":{"name":"startOnline","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)allUserAttributesPrivate":{"name":"allUserAttributesPrivate","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)privateUserAttributes":{"name":"privateUserAttributes","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)useReport":{"name":"useReport","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)inlineUserInEvents":{"name":"inlineUserInEvents","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)debugMode":{"name":"debugMode","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(py)minimumBackgroundPollIntervalMillis":{"name":"minimumBackgroundPollIntervalMillis","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(im)init":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDConfig.html#/c:@M@LaunchDarkly@objc(cs)LDConfig(im)isEqualWithObject:":{"name":"isEqual(object:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDConfig"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(cpy)sharedInstance":{"name":"sharedInstance","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(py)isOnline":{"name":"isOnline","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(py)config":{"name":"config","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(py)user":{"name":"user","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)setOnline:completion:":{"name":"setOnline(_:completion:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)startWithMobileKey:config:user:":{"name":"startWithMobileKey(_:config:user:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)setConfig:":{"name":"setConfig(_:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)setUser:":{"name":"setUser(_:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)stop":{"name":"stop()","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)trackEventWithKey:data:":{"name":"trackEvent(key:data:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)boolVariationForKey:fallback:":{"name":"boolVariation(forKey:fallback:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)integerVariationForKey:fallback:":{"name":"integerVariation(forKey:fallback:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)doubleVariationForKey:fallback:":{"name":"doubleVariation(forKey:fallback:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)stringVariationForKey:fallback:":{"name":"stringVariation(forKey:fallback:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)arrayVariationForKey:fallback:":{"name":"arrayVariation(forKey:fallback:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)dictionaryVariationForKey:fallback:":{"name":"dictionaryVariation(forKey:fallback:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)boolVariationAndSourceForKey:fallback:":{"name":"boolVariationAndSource(forKey:fallback:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)integerVariationAndSourceForKey:fallback:":{"name":"integerVariationAndSource(forKey:fallback:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)doubleVariationAndSourceForKey:fallback:":{"name":"doubleVariationAndSource(forKey:fallback:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)stringVariationAndSourceForKey:fallback:":{"name":"stringVariationAndSource(forKey:fallback:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)arrayVariationAndSourceForKey:fallback:":{"name":"arrayVariationAndSource(forKey:fallback:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)dictionaryVariationAndSourceForKey:fallback:":{"name":"dictionaryVariationAndSource(forKey:fallback:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)observeBool:owner:handler:":{"name":"observeBool(_:owner:handler:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)observeInteger:owner:handler:":{"name":"observeInteger(_:owner:handler:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)observeDouble:owner:handler:":{"name":"observeDouble(_:owner:handler:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)observeString:owner:handler:":{"name":"observeString(_:owner:handler:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)observeArray:owner:handler:":{"name":"observeArray(_:owner:handler:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)observeDictionary:owner:handler:":{"name":"observeDictionary(_:owner:handler:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)observeKeys:owner:handler:":{"name":"observeKeys(_:owner:handler:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)observeAllKeysWithOwner:handler:":{"name":"observeAllKeys(owner:handler:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)observeFlagsUnchangedWithOwner:handler:":{"name":"observeFlagsUnchanged(owner:handler:)","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html#/c:@M@LaunchDarkly@objc(cs)LDClient(im)reportEvents":{"name":"reportEvents()","abstract":"<p>Undocumented</p>","parent_name":"ObjcLDClient"},"Classes/ObjcLDClient.html":{"name":"ObjcLDClient","abstract":"<p>Undocumented</p>"},"Classes/ObjcLDConfig.html":{"name":"ObjcLDConfig","abstract":"<p>Undocumented</p>"},"Classes/ObjcLDUser.html":{"name":"ObjcLDUser","abstract":"<p>Undocumented</p>"},"Protocols/LDFlagBaseTypeConvertible.html#/s:12LaunchDarkly25LDFlagBaseTypeConvertiblePxSgAA0C5ValueOSgcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"LDFlagBaseTypeConvertible"},"Protocols/LDFlagValueConvertible.html#/s:12LaunchDarkly22LDFlagValueConvertibleP02tocD0AA0cD0OyF":{"name":"toLDFlagValue()","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValueConvertible"},"Protocols/LDFlagValueConvertible.html":{"name":"LDFlagValueConvertible","abstract":"<p>Undocumented</p>"},"Protocols/LDFlagBaseTypeConvertible.html":{"name":"LDFlagBaseTypeConvertible","abstract":"<p>Undocumented</p>"},"Structs/LDChangedFlag.html#/s:12LaunchDarkly13LDChangedFlagV3keySSv":{"name":"key","abstract":"<p>Undocumented</p>","parent_name":"LDChangedFlag"},"Structs/LDChangedFlag.html#/s:12LaunchDarkly13LDChangedFlagV8oldValueypSgv":{"name":"oldValue","abstract":"<p>Undocumented</p>","parent_name":"LDChangedFlag"},"Structs/LDChangedFlag.html#/s:12LaunchDarkly13LDChangedFlagV14oldValueSourceAA06LDFlagfG0OSgv":{"name":"oldValueSource","abstract":"<p>Undocumented</p>","parent_name":"LDChangedFlag"},"Structs/LDChangedFlag.html#/s:12LaunchDarkly13LDChangedFlagV8newValueypSgv":{"name":"newValue","abstract":"<p>Undocumented</p>","parent_name":"LDChangedFlag"},"Structs/LDChangedFlag.html#/s:12LaunchDarkly13LDChangedFlagV14newValueSourceAA06LDFlagfG0OSgv":{"name":"newValueSource","abstract":"<p>Undocumented</p>","parent_name":"LDChangedFlag"},"Structs/LDChangedFlag.html#/s:12LaunchDarkly13LDChangedFlagVACSS3key_ypSg8oldValueAA06LDFlagG6SourceOSg0fgI0AE03newG0AI0jgI0tcfc":{"name":"init(key:oldValue:oldValueSource:newValue:newValueSource:)","abstract":"<p>Undocumented</p>","parent_name":"LDChangedFlag"},"Structs/LDChangedFlag.html":{"name":"LDChangedFlag","abstract":"<p>Undocumented</p>"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueO4boolACSbcACmF":{"name":"bool","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueO3intACSicACmF":{"name":"int","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueO6doubleACSdcACmF":{"name":"double","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueO6stringACSScACmF":{"name":"string","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueO5arrayACSayACGcACmF":{"name":"array","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueO10dictionaryACs10DictionaryVySSACGcACmF":{"name":"dictionary","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueO4nullA2CmF":{"name":"null","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueO04baseD0AA0C19BaseTypeConvertible_pSgv":{"name":"baseValue","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueOACSbcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:s27ExpressibleByBooleanLiteralPx0cD4TypeQz07booleanD0_tcfc":{"name":"init(booleanLiteral:)","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueOACSicfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:s27ExpressibleByIntegerLiteralPx0cD4TypeQz07integerD0_tcfc":{"name":"init(integerLiteral:)","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueOACSdcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:s25ExpressibleByFloatLiteralPx0cD4TypeQz05floatD0_tcfc":{"name":"init(floatLiteral:)","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueOACSScfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:s33ExpressibleByUnicodeScalarLiteralPx0cdE4TypeQz07unicodedE0_tcfc":{"name":"init(unicodeScalarLiteral:)","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:s43ExpressibleByExtendedGraphemeClusterLiteralPx0cdeF4TypeQz08extendeddeF0_tcfc":{"name":"init(extendedGraphemeClusterLiteral:)","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:s26ExpressibleByStringLiteralPx0cD4TypeQz06stringD0_tcfc":{"name":"init(stringLiteral:)","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueOACxcs10CollectionRzAC7ElementRtzlufc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:s25ExpressibleByArrayLiteralPxSay0cD7ElementQzG05arrayD0d_tcfc":{"name":"init(arrayLiteral:)","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueO04flagD5ArraySayACGSgv":{"name":"flagValueArray","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueOACxcs8SequenceRzSS_ACt7ElementRtzlufc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:s30ExpressibleByDictionaryLiteralPxSay3KeyQz_5ValueQztG010dictionaryD0d_tcfc":{"name":"init(dictionaryLiteral:)","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueOACs10DictionaryVySSACGcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:12LaunchDarkly11LDFlagValueO04flagD10Dictionarys0F0VySSACGSgv":{"name":"flagValueDictionary","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValue"},"Enums/LDFlagValue.html#/s:s9EquatableP2eeoiSbx_xtFZ":{"name":"==(_:_:)","parent_name":"LDFlagValue"},"Enums/LDFlagValueSource.html#/s:12LaunchDarkly17LDFlagValueSourceO6serverA2CmF":{"name":"server","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValueSource"},"Enums/LDFlagValueSource.html#/s:12LaunchDarkly17LDFlagValueSourceO5cacheA2CmF":{"name":"cache","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValueSource"},"Enums/LDFlagValueSource.html#/s:12LaunchDarkly17LDFlagValueSourceO8fallbackA2CmF":{"name":"fallback","abstract":"<p>Undocumented</p>","parent_name":"LDFlagValueSource"},"Enums/LDStreamingMode.html#/s:12LaunchDarkly15LDStreamingModeO9streamingA2CmF":{"name":"streaming","abstract":"<p>In streaming mode, the LDClient opens a long-running connection to LaunchDarkly&rsquo;s streaming server (called <em>clientstream</em>). When a flag value changes on the server, the clientstream notifies the SDK to update the value. Streaming mode is not available on watchOS. On iOS and tvOS, the client app must be running in the foreground to connect to clientstream. On macOS the client app may run in either foreground or background to connect to clientstream. If streaming mode is not available, the SDK reverts to polling mode.</p>","parent_name":"LDStreamingMode"},"Enums/LDStreamingMode.html#/s:12LaunchDarkly15LDStreamingModeO7pollingA2CmF":{"name":"polling","abstract":"<p>In polling mode, the LDClient requests feature flags from LaunchDarkly&rsquo;s app server at regular intervals defined in the LDConfig. When a flag value changes on the server, the LDClient will learn of the change the next time the SDK requests feature flags.</p>","parent_name":"LDStreamingMode"},"Enums/LDStreamingMode.html":{"name":"LDStreamingMode","abstract":"<p>Defines the connection modes available to set into LDClient</p>"},"Enums/LDFlagValueSource.html":{"name":"LDFlagValueSource","abstract":"<p>Undocumented</p>"},"Enums/LDFlagValue.html":{"name":"LDFlagValue","abstract":"<p>Undocumented</p>"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV22privatizableAttributesSaySSGvZ":{"name":"privatizableAttributes","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV3keySSv":{"name":"key","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV4nameSSSgv":{"name":"name","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV9firstNameSSSgv":{"name":"firstName","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV8lastNameSSSgv":{"name":"lastName","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV7countrySSSgv":{"name":"country","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV9ipAddressSSSgv":{"name":"ipAddress","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV5emailSSSgv":{"name":"email","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV6avatarSSSgv":{"name":"avatar","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV6customs10DictionaryVySSypGSgv":{"name":"custom","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV11isAnonymousSbv":{"name":"isAnonymous","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV6deviceSSSgv":{"name":"device","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV15operatingSystemSSSgv":{"name":"operatingSystem","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserV17privateAttributesSaySSGSgv":{"name":"privateAttributes","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserVACSSSg3key_AD4nameAD9firstNameAD04lastG0AD7countryAD9ipAddressAD5emailAD6avatars10DictionaryVySSypGSg6customAD6deviceAD15operatingSystemSbSg11isAnonymousSaySSGSg17privateAttributestcfc":{"name":"init(key:name:firstName:lastName:country:ipAddress:email:avatar:custom:device:operatingSystem:isAnonymous:privateAttributes:)","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserVACSgypSg6object_tcfc":{"name":"init(object:)","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:12LaunchDarkly6LDUserVACs10DictionaryVySSypG04userD0_tcfc":{"name":"init(userDictionary:)","abstract":"<p>Undocumented</p>","parent_name":"LDUser"},"Structs/LDUser.html#/s:s9EquatableP2eeoiSbx_xtFZ":{"name":"==(_:_:)","parent_name":"LDUser"},"Structs/LDConfig/Minima.html#/s:12LaunchDarkly8LDConfigV6MinimaV21pollingIntervalMillisSiv":{"name":"pollingIntervalMillis","abstract":"<p>The minimum interval between feature flag requests in milliseconds. Used only for polling mode. (5 minutes)</p>","parent_name":"Minima"},"Structs/LDConfig/Minima.html#/s:12LaunchDarkly8LDConfigV6MinimaV28backgroundPollIntervalMillisSiv":{"name":"backgroundPollIntervalMillis","abstract":"<p>The minimum interval between feature flag requests while running in the background, in milliseconds. Used only for polling mode. (15 minutes)</p>","parent_name":"Minima"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV8DefaultsV":{"name":"Defaults","abstract":"<p>The default values set when a LDConfig is initialized</p>","parent_name":"LDConfig"},"Structs/LDConfig/Minima.html":{"name":"Minima","abstract":"<p>The minimum values allowed to be set into LDConfig</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV7baseUrl10Foundation3URLVv":{"name":"baseUrl","abstract":"<p>The url for making feature flag requests. Do not change unless instructed by LaunchDarkly.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV9eventsUrl10Foundation3URLVv":{"name":"eventsUrl","abstract":"<p>The url for making event reports. Do not change unless instructed by LaunchDarkly.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV9streamUrl10Foundation3URLVv":{"name":"streamUrl","abstract":"<p>The url for connecting to the <em>clientstream</em>. Do not change unless instructed by LaunchDarkly.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV13eventCapacitySiv":{"name":"eventCapacity","abstract":"<p>The maximum number of analytics events the LDClient can store. When the LDClient event store reaches the eventCapacity, the SDK discards events until it successfully reports them to LaunchDarkly. (Default: 100)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV23connectionTimeoutMillisSiv":{"name":"connectionTimeoutMillis","abstract":"<p>The timeout interval in milliseconds for flag requests and event reports. (Default: 10 seconds)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV24eventFlushIntervalMillisSiv":{"name":"eventFlushIntervalMillis","abstract":"<p>The interval between event reports in milliseconds (Default: 30 seconds)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV18pollIntervalMillisSiv":{"name":"pollIntervalMillis","abstract":"<p>The interval between feature flag requests in milliseconds. Used only for polling mode. (Default: 5 minutes)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV28backgroundPollIntervalMillisSiv":{"name":"backgroundPollIntervalMillis","abstract":"<p>The interval between feature flag requests while running in the background, in milliseconds. Used only for polling mode. (Default: 60 minutes)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV13streamingModeAA011LDStreamingE0Ov":{"name":"streamingMode","abstract":"<p>Controls the method the SDK uses to keep feature flags updated. When set to .streaming, connects to <code>clientstream</code> which notifies the SDK of feature flag changes. When set to .polling, an efficient polling mechanism is used to periodically request feature flag values. Ignored for watchOS, which always uses .polling. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LDStreamingMode.html\">LDStreamingMode</a></code> for more details. (Default: .streaming)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV23enableBackgroundUpdatesSbv":{"name":"enableBackgroundUpdates","abstract":"<p>Enables feature flag updates when your app is in the background. Allowed on macOS only. (Default: false)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV11startOnlineSbv":{"name":"startOnline","abstract":"<p>Controls LDClient start behavior. When true, calling start causes LDClient to go online. When false, calling start causes LDClient to remain offline. If offline at start, set the client online to receive flag updates. (Default: true)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV24allUserAttributesPrivateSbv":{"name":"allUserAttributesPrivate","abstract":"<p>Treat all user attributes as private for event reporting for all users.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV21privateUserAttributesSaySSGSgv":{"name":"privateUserAttributes","abstract":"<p>User attributes and top level custom dictionary keys to treat as private for event reporting for all users.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV9useReportSbv":{"name":"useReport","abstract":"<p>Directs the SDK to use REPORT for HTTP requests to connect to <code>clientstream</code> and make feature flag requests. When false the SDK uses GET for these requests. Do not use unless advised by LaunchDarkly. (Default: false)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV18inlineUserInEventsSbv":{"name":"inlineUserInEvents","abstract":"<p>Controls how the SDK reports the user in analytics event reports. When set to true, event reports will contain the user attributes, except attributes marked as private. When set to false, event reports will contain the user&rsquo;s key only, reducing the size of event reports. (Default: false)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV11isDebugModeSbv":{"name":"isDebugMode","abstract":"<p>Enables logging for debugging. (Default: false)</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigV6minimaAC6MinimaVv":{"name":"minima","abstract":"<p>LaunchDarkly defined minima for selected configurable items</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:12LaunchDarkly8LDConfigVACycfc":{"name":"init()","abstract":"<p>LDConfig constructor. Configurable values are all set to their default values. The client app can modify these values as desired. Note that client app developers may prefer to get the LDConfig from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/LDClient.html#/s:12LaunchDarkly8LDClientC6configAA8LDConfigVv\">LDClient.config</a></code> in order to retain previously set values.</p>","parent_name":"LDConfig"},"Structs/LDConfig.html#/s:s9EquatableP2eeoiSbx_xtFZ":{"name":"==(_:_:)","parent_name":"LDConfig"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC6sharedACvZ":{"name":"shared","abstract":"<p>Access to the LDClient singleton. For iOS apps with watchOS companion apps, there will be a singleton on each platform. These singletons do not communicate with each other. If you try to share feature flags between apps, the latest flag values may be overwritten by old feature flags from the other platform. LaunchDarkly recommends not sharing feature flags between apps and allowing each LDClient to manage feature flags on its own platform. If you share feature flag data between apps, provide a way to prevent the LDClients from overwriting new feature flags with old feature flags in the shared data.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC8isOnlineSbv":{"name":"isOnline","abstract":"<p>Reports the online/offline state of the LDClient.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC9setOnlineySb_yycSg10completiontF":{"name":"setOnline(_:completion:)","abstract":"<p>Set the LDClient online/offline.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC6configAA8LDConfigVv":{"name":"config","abstract":"<p>The LDConfig that configures the LDClient. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDConfig.html\">LDConfig</a></code> for details about what can be configured.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC4userAA6LDUserVv":{"name":"user","abstract":"<p>The LDUser set into the LDClient may affect the set of feature flags returned by the LD server, and ties event tracking to the user. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDUser.html\">LDUser</a></code> for details about what information can be retained.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC5startySS9mobileKey_AA8LDConfigVSg6configAA6LDUserVSg4useryycSg10completiontF":{"name":"start(mobileKey:config:user:completion:)","abstract":"<p>Starts the LDClient using the passed in <code>mobileKey</code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/LDClient.html#/s:12LaunchDarkly8LDClientC6configAA8LDConfigVv\">config</a></code>, &amp; <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/LDClient.html#/s:12LaunchDarkly8LDClientC4userAA6LDUserVv\">user</a></code>. Call this before requesting feature flag values. The LDClient will not go online until you call this method.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC4stopyyF":{"name":"stop()","abstract":"<p>Stops the LDClient. Stopping the client means the LDClient goes offline and stops recording events. LDClient will no longer provide feature flag values, only returning fallback values.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC9variationxSS6forKey_x8fallbacktAA22LDFlagValueConvertibleRzlF":{"name":"variation(forKey:fallback:)","abstract":"<p>Returns the variation for the given feature flag. If the flag does not exist, cannot be cast to the correct return type, or the LDClient is not started, returns the fallback value.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC18variationAndSourcex_AA011LDFlagValueF0OtSS6forKey_x8fallbacktAA0gH11ConvertibleRzlF":{"name":"variationAndSource(forKey:fallback:)","abstract":"<p>Returns the variation and source for the given feature flag as a tuple. If the flag does not exist, cannot be cast to the correct return type, or the LDClient is not started, returns the fallback value and <code>.fallback</code> for the source.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC7observeySS_yXl5owneryAA13LDChangedFlagVc7handlertF":{"name":"observe(_:owner:handler:)","abstract":"<p>Sets a handler for the specified flag key executed on the specified owner. If the flag&rsquo;s value changes, executes the handler, passing in the <code>changedFlag</code> containing the old and new flag values, and old and new flag value source. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDChangedFlag.html\">LDChangedFlag</a></code> for details.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC7observeySaySSG_yXl5ownerys10DictionaryVySSAA13LDChangedFlagVGc7handlertF":{"name":"observe(_:owner:handler:)","abstract":"<p>Sets a handler for the specified flag keys executed on the specified owner. If any observed flag&rsquo;s value changes, executes the handler 1 time, passing in a dictionary of [LDFlagKey: LDChangedFlag] containing the old and new flag values, and old and new flag value source. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDChangedFlag.html\">LDChangedFlag</a></code> for details.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC10observeAllyyXl5owner_ys10DictionaryVySSAA13LDChangedFlagVGc7handlertF":{"name":"observeAll(owner:handler:)","abstract":"<p>Sets a handler for all flag keys executed on the specified owner. If any flag&rsquo;s value changes, executes the handler 1 time, passing in a dictionary of [LDFlagKey: LDChangedFlag] containing the old and new flag values, and old and new flag value source. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LDChangedFlag.html\">LDChangedFlag</a></code> for details.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC21observeFlagsUnchangedyyXl5owner_yyc7handlertF":{"name":"observeFlagsUnchanged(owner:handler:)","abstract":"<p>Sets a handler executed when a flag update leaves the flags unchanged from their previous values.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC13stopObservingyyXl5owner_tF":{"name":"stopObserving(owner:)","abstract":"<p>Removes all observers for the given owner, including the flagsUnchangedObserver</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC19onServerUnavailableyycSgv":{"name":"onServerUnavailable","abstract":"<p>Sets a closure called if the client is unable to contact the LaunchDarkly server. Unlike the observers, only 1 closure can be set at any given time. The SDK keeps a strong reference to the closure. Client apps should take care to remove the closure prior to deinit on the owner in order to avoid the SDK causing an object to not be destroyed when expected.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC10trackEventySS3key_s10DictionaryVySSypGSg4datatF":{"name":"trackEvent(key:data:)","abstract":"<p>Adds a custom event to the LDClient event store. A client app can set a tracking event to allow client customized data analysis. Once an app has called <code>trackEvent</code>, the app cannot remove the event from the event store.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC12reportEventsyyF":{"name":"reportEvents()","abstract":"<p>Report events to LaunchDarkly servers. While online, the LDClient automatically reports events on the <code>LDConfig.eventFlushInterval</code>, and whenever the client app moves to the background. There should normally not be a need to call reportEvents.</p>","parent_name":"LDClient"},"Classes/LDClient.html#/s:12LaunchDarkly8LDClientC20allFeatureFlagValuess10DictionaryVySSypGSgv":{"name":"allFeatureFlagValues","abstract":"<p>Undocumented</p>","parent_name":"LDClient"},"Classes/LDClient.html":{"name":"LDClient","abstract":"<p>The LDClient is the heart of the SDK, providing client apps running iOS, watchOS, macOS, or tvOS access to LaunchDarkly services. This singleton provides the ability to set a configuration (LDConfig) that controls how the LDClient talks to LaunchDarkly servers, and a user (LDUser) that provides finer control on the feature flag values delivered to LDClient. Once the LDClient has started, it connects to LaunchDarkly&rsquo;s servers to get the feature flag values you set in the Dashboard.</p>"},"Structs/LDConfig.html":{"name":"LDConfig","abstract":"<p>Use LDConfig to configure the LDClient. When initialized, a LDConfig contains the default values which can be changed as needed.</p>"},"Structs/LDUser.html":{"name":"LDUser","abstract":"<p>Undocumented</p>"},"Launch Darkly.html":{"name":"Launch Darkly"},"Enumerations.html":{"name":"Enumerations"},"Flag Changes.html":{"name":"Flag Changes"},"LD Protocols.html":{"name":"LD Protocols"},"Objective-C.html":{"name":"Objective-C"},"Obj-C Enumerations.html":{"name":"Obj-C Enumerations"},"Obj-C Variation Values.html":{"name":"Obj-C Variation Values"},"Obj-C Changed Flags.html":{"name":"Obj-C Changed Flags"}}